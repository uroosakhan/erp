<?php


/**
	Document blueprint use following parameters set in doctext.inc:

	$Addr1,	$Addr2 - address info
	$Payment_Terms - payment terms line
	$Footer - footer texts
	$this->company - company info
	$this->title - report title
	$this->formData - some other info
***/

		$this->row = $this->pageHeight - $this->topMargin;

		$upper = $this->row - 2 * $this->lineHeight;
		$lower = $this->bottomMargin + 8 * $this->lineHeight;
		$iline1 = $upper - 7.5 * $this->lineHeight;
		$iline2 = $iline1 - 8 * $this->lineHeight;
		$iline3 = $iline2 - 1.5 * $this->lineHeight;
		$iline4 = $iline3 - 1.5 * $this->lineHeight;
		$iline5 = $iline4 - 3 * $this->lineHeight;
		$iline6 = $iline5 - 1.5 * $this->lineHeight;
		$iline7 = $lower;
		$right = $this->pageWidth - $this->rightMargin;
		$width = ($right - $this->leftMargin) / 5;
		$icol = $this->pageWidth / 2;
		$ccol = $this->cols[0] + 4;
		$c2col = $ccol + 60;
		$ccol2 = $icol / 2;
		$mcol = $icol + 8;
		$mcol2 = $this->pageWidth - $ccol2;
		$cols = count($this->cols);

		$this->SetDrawColor(205, 205, 205);
		//$this->Line($iline1, 2);
		$this->SetDrawColor(128, 128, 128);
		$this->Line($iline1-5);
	//$this->rectangle($this->leftMargin, $iline2, $right - $this->leftMargin, $iline2 - $iline3, "F", null, array(222, 231, 236));
//		$this->Line($iline2);
//		$this->Line($iline3);
//		$this->Line($iline4);
//	$this->rectangle($this->leftMargin, $iline5, $right - $this->leftMargin, $iline5 - $iline6, "F", null, array(222, 231, 236));
		$this->Line($iline5);
		$this->Line($iline6);
		$this->Line($iline7);
//		$this->LineTo($this->leftMargin, $iline2 ,$this->leftMargin, $iline4);
//		$col = $this->leftMargin;
//		for ($i = 0; $i < 5; $i++)
//		{
//			$this->LineTo($col += $width, $iline2,$col, $iline4);
//		}
		//$this->LineTo($right, $iline2 ,$right, $iline4);
		$this->LineTo($this->leftMargin, $iline5 ,$this->leftMargin, $iline7);
		if ($this->l['a_meta_dir'] == 'rtl') // avoid line overwrite in rtl language
			$this->LineTo($this->cols[$cols - 2], $iline5 ,$this->cols[$cols - 2], $iline7);
		else
			$this->LineTo($this->cols[$cols - 1] + 4, $iline5 ,$this->cols[$cols - 1] + 4, $iline7);
$this->LineTo($this->cols[$cols - 2] + 4, $iline5 ,$this->cols[$cols - 2] + 4, $iline7);
$this->LineTo($this->cols[$cols - 3] -1, $iline5 ,$this->cols[$cols - 3] -1, $iline7);
$this->LineTo($this->cols[$cols - 4] + 4, $iline5 ,$this->cols[$cols - 4] + 4, $iline7);

		$this->LineTo($right, $iline5 ,$right, $iline7);

		// Company Logo
		$this->NewLine(3);
		$logo = company_path() . "/images/" . $this->company['coy_logo'];
		//if ($this->company['coy_logo'] != '' && file_exists($logo))
		//{
			//$this->AddImage($logo, 480, $this->row, 0, 40);
		//}
//		//else
//		//{
//			$this->fontSize += 4;
//			$this->Font('bold');
//			//$this->Text($ccol, $this->company['coy_name'], $icol);
//			$this->Font();
//			$this->fontSize -= 4;
//		}
function get_location1100($loc_code)
{
	$sql = "SELECT location_name FROM ".TB_PREF."locations WHERE loc_code=".db_escape($loc_code);
	$result = db_query($sql,"Customer Record Retreive");
	$row = db_fetch_row($result);
	return $row[0];
	display_db_error("could not retreive the location name for $loc_code", $sql, true);
}
$this->Font('bold');


$this->MultiCell(370, 75,$this->company['coy_name'], 1, 'L', 0, 2, 45,42, true); // 3
$this->Font('');

$this->MultiCell(250, 188,$this->company['postal_address'], 0, 'L', 0, 2, 45,55, true); // 3

$this->MultiCell(250, 188,"Phone:", 0, 'L', 0, 2, 45,85, true); // 3
$this->MultiCell(250, 188,$this->company['phone'], 0, 'L', 0, 2, 85,85, true); // 3

$this->MultiCell(250, 188,"Fax:", 0, 'L', 0, 2, 45,100, true); // 3
$this->MultiCell(250, 188,$this->company['fax'], 0, 'L', 0, 2, 65,100, true); // 3
$this->Font('bold');
$this->setfontsize(16);
$this->MultiCell(250, 188,"Invoice", 0, 'L', 0, 2, 265,130, true); // 3
$this->setfontsize(11);
$this->MultiCell(250, 188,"Customer", 0, 'L', 0, 2, 45,180, true); // 3
$this->MultiCell(250, 188,"Detail", 0, 'L', 0, 2, 430,180, true); // 3

$this->Font('');
$this->MultiCell(250, 188,"Name:", 0, 'L', 0, 2, 45,205, true); // 3
$this->MultiCell(250, 188,"Phone:", 0, 'L', 0, 2, 45,262, true); // 3
$get_phone = get_phoneno_for_crm_persons_($this->formData['debtor_no']);

$this->MultiCell(250, 188,"".$get_phone['phone'], 0, 'L', 0, 2, 105,267, true); // 3
$deliveries = get_sales_parent_numbers(ST_SALESINVOICE, $this->formData['trans_no']);
if ($print_invoice_no == 0)
{
    foreach($deliveries as $n => $delivery) {
        $deliveries[$n] = get_reference(ST_CUSTDELIVERY, $delivery);
    }
}
$this->MultiCell(250, 188,"Date:", 0, 'L', 0, 2, 455,205, true); // 3sql2date($this->formData['document_date'])
$this->MultiCell(250, 188,"DC No:", 0, 'L', 0, 2, 455,225, true);
$myrow_new = get_customer_trans($this->formData['trans_no'], ST_CUSTDELIVERY);
$sales_order = get_sales_order_header($this->formData['order_'], ST_SALESORDER);

$this->MultiCell(250, 188,$deliveries[$n], 0, 'L', 0, 2, 500,225, true);
// 3sql2date($this->formData['document_date'])//
// 3sql2date($this->formData['document_date'])
$this->MultiCell(250, 188,"DC Date.:", 0, 'L', 0, 2, 455,245, true);

$this->MultiCell(250, 188,"Location.:", 0, 'L', 0, 2, 455,265, true);
$this->MultiCell(250, 188,"".get_location1100($sales_order['from_stk_loc']), 0, 'L', 0, 2, 500,265, true);

$this->MultiCell(250, 188,"S.O No.:", 0, 'L', 0, 2, 455,285, true);
$this->MultiCell(250, 188,"".$sales_order['reference'], 0, 'L', 0, 2, 500,285, true);

$this->MultiCell(250, 188,"".sql2date($this->formData['tran_date']), 0, 'L', 0, 2, 500,245, true);

$this->MultiCell(250, 188,"".sql2date($this->formData['document_date']), 0, 'L', 0, 2, 500,205, true);
$this->MultiCell(340, 188,"__________", 0, 'L', 0, 2, 500,212, true); // 3
$this->MultiCell(340, 188,"__________", 0, 'L', 0, 2, 500,229, true); // 3
$this->MultiCell(340, 188,"__________", 0, 'L', 0, 2, 500,249, true); // 3
$this->MultiCell(340, 188,"__________", 0, 'L', 0, 2, 500,269, true); // 3
$this->MultiCell(340, 188,"__________", 0, 'L', 0, 2, 500,289, true); // 3


//display_error(get_customer_name($row['trans_no']));
$this->MultiCell(250, 188,"".get_customer_name($this->formData['debtor_no']), 0, 'L', 0, 2, 105,210, true); // 3
$this->MultiCell(250, 188,"Address:", 0, 'L', 0, 2, 45,225, true);
$this->MultiCell(300, 188,($this->formData['address']), 0, 'L', 0, 2, 105,230, true); // 3

$this->MultiCell(340, 188,"_____________________________________________________", 0, 'L', 0, 2, 105,212, true); // 3
$this->MultiCell(340, 188,"_____________________________________________________", 0, 'L', 0, 2, 105,230, true); // 3
$this->MultiCell(340, 188,"_____________________________________________________", 0, 'L', 0, 2, 105,250, true); // 3
$this->MultiCell(340, 188,"_____________________________________________________", 0, 'L', 0, 2, 105,270, true); // 3


$this->MultiCell(200, 30,"_______________________", 0, 'L', 0, 2, 430,790, true); // 3
$this->setfontsize(8);
$this->MultiCell(200, 30,"For ".$this->company['coy_name'], 0, 'L', 0, 2, 430,805, true); // 3


		// Document title

		$this->SetTextColor(190, 190, 190);
		$this->fontSize += 10;
		$this->Font('bold');
		//$this->TextWrap($mcol, $this->row, $this->pageWidth - $this->rightMargin - $mcol - 20, $this->title, 'right');
		$this->Font();
		$this->fontSize -= 10;
		//$this->NewLine();
		$this->SetTextColor(0, 0, 0);
		$adrline = $this->row;
//$this->MultiCell(252, 148,  , 0, 'L', 0, 2, 83,88, true);

		// Company data
		//$this->TextWrapLines($ccol, $icol, $this->company['postal_address']);
//		$this->Font('italic');
//		if (@$this->company['phone'])
//		{
//			$this->Text($ccol, _("Phone"), $c2col);
//			$this->Text($c2col, $this->company['phone'], $mcol);
//			$this->NewLine();
//		}
//		if (@$this->company['fax'])
//		{
//			$this->Text($ccol, _("Fax"), $c2col);
//			$this->Text($c2col, $this->company['fax'], $mcol);
//			$this->NewLine();
//		}
//		if (@$this->company['email'])
//		{
//			$this->Text($ccol, _("Email"), $c2col);
//
//			$url = "mailto:" . $this->company['email'];
//			$this->SetTextColor(0, 0, 255);
//			$this->Text($c2col, $this->company['email'], $mcol);
//			$this->SetTextColor(0, 0, 0);
//			$this->addLink($url, $c2col, $this->row, $mcol, $this->row + $this->lineHeight);
//
//			$this->NewLine();
//		}
		if (@$this->company['gst_no'])
		{
			$this->Text($ccol, _("Our VAT No."), $c2col);
			$this->Text($c2col, $this->company['gst_no'], $mcol);
			$this->NewLine();
		}
//		if (@$this->formData['domicile'])
//		{
//			$this->Text($ccol, _("Domicile"), $c2col);
//			$this->Text($c2col, $this->company['domicile'], $mcol);
//			$this->NewLine();
//		}
		$this->Font();
		$this->row = $adrline;
		$this->NewLine(3);
//		$this->Text($mcol + 100, _("Date"));
//		$this->Text($mcol + 180, sql2date($this->formData['document_date']));

		$this->NewLine(6);
               
		//$this->Text($mcol + 150, $this->formData['document_name']);
                
               
                 $this->fontSize += 5;
                $this->Font('bold');
		$this->Text($mcol + 190, $this->formData['document_number']);
                $this->Font('');
                $this->fontSize -= 5;
               
		$this->NewLine(2);
	
		if ($this->pageNumber > 1)
			$this->Text($mcol + 180, _("Page") . ' ' . $this->pageNumber);
		$this->row = $iline1 - $this->lineHeight;
		$this->fontSize -= 4;
		//$this->Text($ccol, $Addr1['title'], $icol);
		//$this->Text($mcol, $Addr2['title']);
		$this->fontSize += 4;

// address1
		$temp = $this->row = $this->row - $this->lineHeight - 5;
		//$this->Text($ccol, $Addr1['name'], $icol);
		$this->NewLine();
		//$this->TextWrapLines($ccol, $icol - $ccol, $Addr1['address']);

// address2
		$this->row = $temp;
		///$this->Text($mcol, $Addr2['name']);
		$this->NewLine();
		//$this->TextWrapLines($mcol, $this->rightMargin - $mcol, $Addr2['address'], 'left', 0, 0, NULL, 1);

		// Auxiliary document information
		$col = $this->leftMargin;
//		foreach($aux_info as $info_header => $info_content)
//		{
//
//			$this->row = $iline2 - $this->lineHeight - 1;
//			$this->TextWrap($col, $this->row, $width, $info_header, 'C');
//			$this->row = $iline3 - $this->lineHeight - 1;
//			$this->TextWrap($col, $this->row, $width, $info_content, 'C');
//			$col += $width;
//		}
		// Payment terms
//		$this->row -= (2 * $this->lineHeight);
//		$this->Font('italic');
//		$this->TextWrap($ccol, $this->row, $right-$ccol, $Payment_Terms);
//		$this->Font();

		// Line headers
		$this->row = $iline5 - $this->lineHeight - 1;
		$this->Font('bold');
		$count = count($this->headers);
		$this->cols[$count] = $right - 3;
		for ($i = 0; $i < $count; $i++)
			$this->TextCol($i, $i + 1, $this->headers[$i], -2);
		$this->Font();

		// Footer
		$this->Font('italic');
		$this->row = $iline7 - $this->lineHeight - 6;

		foreach ($Footer as $line => $txt)
		{
			if (!is_numeric($line))	// title => link
			{
				$this->fontSize -= 2;
				$this->TextWrap($ccol, $this->row, $right - $ccol, $line, 'C');
				$this->row -= $this->lineHeight;
				$this->SetTextColor(0, 0, 255);
				$this->TextWrap($ccol, $this->row, $right - $ccol, $txt, 'C');
				$this->SetTextColor(0, 0, 0);
				$this->addLink($txt, $ccol, $this->row, $this->pageWidth - $this->rightMargin, $this->row + $this->lineHeight);
				$this->fontSize += 2;
			}
			else
				$this->TextWrap($ccol, $this->row, $right - $ccol, $txt, 'C');
			$this->row -= $this->lineHeight;

		}

		$this->Font();
		$temp = $iline6 - $this->lineHeight - 2;
